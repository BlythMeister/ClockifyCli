version: 1.11.{build}
image: Visual Studio 2022
skip_tags: true
skip_branch_with_pr: true
skip_commits:
  files:
    - .github/*
    - docs/**/*
    - '**/*.html'
    - '**/*.md'
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '$(appveyor_build_version)'
  package_version: '$(appveyor_build_version)'
  assembly_version: '$(appveyor_build_version)'
  file_version: '$(appveyor_build_version)'
  informational_version: '$(appveyor_build_version)'
before_build:
- ps: |
    Write-Host "=== AppVeyor Before Build - Changelog Injection ==="
    Write-Host "Working directory: $PWD"
    Write-Host "AppVeyor build version: $env:APPVEYOR_BUILD_VERSION"
    
    # Check if the script exists
    $scriptPath = ".\scripts\inject-changelog.ps1"
    if (Test-Path $scriptPath) {
        Write-Host "✓ Found script: $scriptPath"
        
        # Set execution policy for this session
        Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force
        
        # Execute the script with error handling
        try {
            Write-Host "Executing changelog injection script..."
            & $scriptPath -Version $env:APPVEYOR_BUILD_VERSION
            Write-Host "✓ Changelog injection completed successfully"
        }
        catch {
            Write-Host "❌ Error executing changelog script: $($_.Exception.Message)"
            Write-Host "Error details: $($_.Exception.ToString())"
            exit 1
        }
    } else {
        Write-Host "❌ Script not found: $scriptPath"
        Write-Host "Available files in scripts directory:"
        if (Test-Path ".\scripts\") {
            Get-ChildItem ".\scripts\" | ForEach-Object { Write-Host "  - $($_.Name)" }
        } else {
            Write-Host "  scripts directory does not exist!"
        }
        exit 1
    }
    Write-Host "=== End Before Build ==="
build_script:
- cmd: >-
    dotnet restore src\ClockifyCli.sln
    
    dotnet build src\ClockifyCli.sln --configuration Release
    
    dotnet test src\ClockifyCli.sln --configuration Release
    
    dotnet pack src\ClockifyCli.sln --configuration Release
test: false
artifacts:
- path: src\ClockifyCli\nupkg\ClockifyCli.$(appveyor_build_version).nupkg
  name: ClockifyCli.$(appveyor_build_version).nupkg
deploy:
- provider: NuGet
  api_key: $(blythmeister_nuget_key)
  artifact: ClockifyCli.$(appveyor_build_version).nupkg
  on:
    branch: master
- provider: GitHub
  tag: v$(appveyor_build_version)
  release: v$(appveyor_build_version)
  description: $(RELEASE_NOTES)
  auth_token: $(blythmeister_github_key)
  repository: BlythMeister/ClockifyCli
  artifact: ClockifyCli.$(appveyor_build_version).nupkg
  on:
    branch: master

